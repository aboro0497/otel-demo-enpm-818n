name: Manual Deploy to EKS

on:
  workflow_dispatch:

jobs:
  build-deploy:
    name: Build, Push to ECR & Deploy to EKS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Upload otel-values-upgrade.yaml to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: ./k8s/otel-values-upgrade.yaml
          target: /home/ec2-user/

      - name: SSH into EC2 to Clone, Build, Push to ECR
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            export ECR_REPO_URI="${{ secrets.ECR_REPO_URI }}"
            export AWS_REGION="${{ secrets.AWS_REGION }}"

            echo "Cloning OpenTelemetry demo repo..."
            rm -rf /home/ec2-user/opentelemetry-demo
            git clone https://github.com/open-telemetry/opentelemetry-demo.git /home/ec2-user/opentelemetry-demo

            cd /home/ec2-user/opentelemetry-demo

            echo "Logging in to ECR..."
            aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$ECR_REPO_URI"

            echo "Building only the otel-frontend service..."
            docker compose -f docker-compose.yml build frontend

            echo "Tagging and pushing image to ECR..."
            docker tag frontend:latest $ECR_REPO_URI:latest
            docker push $ECR_REPO_URI:latest

            echo "Appending image config to Helm values file..."
            echo -e "image:\n  repository: $ECR_REPO_URI\n  tag: latest" >> /home/ec2-user/otel-values-upgrade.yaml

      - name: Run Image Smoke Test on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Running docker image test..."
            docker run --rm ${{ secrets.ECR_REPO_URI }}:latest /bin/sh -c "echo 'Image is working!'"

      - name: SSH into EC2 and Run Helm Upgrade
        id: deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script_stop: true
          script: |
            echo "Deploying otel-demo via Helm..."
            helm repo add open-telemetry https://open-telemetry.github.io/opentelemetry-helm-charts || true
            helm repo update
            helm upgrade --install otel-demo open-telemetry/opentelemetry-demo \
              --namespace otel-helm --create-namespace \
              -f /home/ec2-user/otel-values-upgrade.yaml

  rollback:
    name: Rollback if Deploy Fails
    needs: build-deploy
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: SSH into EC2 to Rollback
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            echo "Deployment failed â€” rolling back..."
            helm rollback otel-demo
